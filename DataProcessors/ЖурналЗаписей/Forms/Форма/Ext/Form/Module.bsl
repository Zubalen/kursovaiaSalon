
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Дата = ТекущаяДата();
	Должность = Справочники.Должности.ОсновнаяДолжность();
	
	СозданиеИзмеренийПланировщика();	
	
	ОбновитьПериодОтображенияПланировщика();
	
	ЗаполнитьЖурналЗаписей();
КонецПроцедуры

&НаСервере
Процедура ОбновитьПериодОтображенияПланировщика()

	Начало = НачалоДня(Дата) + 9 * 3600;
	Конец = НачалоДня(Дата) + 19 * 3600;
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	Планировщик.ТекущиеПериодыОтображения.Добавить(Начало, Конец);

КонецПроцедуры

&НаСервере
Процедура СозданиеИзмеренийПланировщика()
	Измерение = Планировщик.Измерения.Добавить("Сотрудник");
	
	Выборка = Справочники.Сотрудники.Выбрать();
	
	Пока Выборка.Следующий() Цикл	
		Если Выборка.ПометкаУдаления Тогда		
			Продолжить;	
		КонецЕсли;
		ЗначениеИзмерения = Измерение.Элементы.Добавить(Выборка.Ссылка);
		ЗначениеИзмерения.Текст = Выборка.Наименование + Символы.ПС + Выборка.Должность;
		ЗначениеИзмерения.ЦветРамки = WebЦвета.СветлоЗеленый;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЖурналЗаписей()
	
	Планировщик.Элементы.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Запись.Дата КАК Дата,
		|	Запись.Сотрудник КАК Сотрудник,
		|	Запись.Услуга КАК Услуга,
		|	Запись.Сумма КАК Сумма,
		|	Запись.Длительность КАК Длительность,
		|	Запись.Клиент КАК Клиент,
		|	Запись.Клиент.Телефон КАК Телефон,
		|	Запись.Комментарий КАК Комментарий,
		|	Запись.ДатаОкончания КАК ДатаОкончания,
		|	Запись.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Запись КАК Запись
		|ГДЕ
		|	Запись.Проведен
		|	И Запись.Сотрудник.Должность = &Должность
		|	И Запись.Дата МЕЖДУ &ДатаНачало И &ДатаОкончание";
	
	Запрос.УстановитьПараметр("Должность", Должность);
	Запрос.УстановитьПараметр("ДатаНачало", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончание", КонецДня(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СоответствиеИзмерений = Новый Соответствие;
		СоответствиеИзмерений.Вставить("Сотрудник", Выборка.Сотрудник);
				
		ЖирныйШрифт = Новый Шрифт(,,,Истина);
		
		ПредставлениеКлиента = Строка(Выборка.Клиент) + ", " + Выборка.Телефон;
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ПредставлениеКлиента,ЖирныйШрифт));
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Строка(Выборка.Услуга));
		МассивСтрок.Добавить(Символы.ПС);
		Если ЗначениеЗаполнено(Выборка.Комментарий) Тогда		
			МассивСтрок.Добавить(Выборка.Комментарий);		
		КонецЕсли;
				
		ЭлементПланирования = Планировщик.Элементы.Добавить(Выборка.Дата,Выборка.ДатаОкончания); 
		ЭлементПланирования.ЗначенияИзмерений = Новый ФиксированноеСоответствие(СоответствиеИзмерений);
		ЭлементПланирования.Значение = Выборка.Ссылка;
		ЭлементПланирования.Текст = Новый ФорматированнаяСтрока(МассивСтрок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьПриИзменении(Элемент)
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьЖурналЗаписей();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьЖурналЗаписей();
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Дата", Начало);
	ЗначенияЗаполнения.Вставить("ДатаОкончания", Конец);
	ЗначенияЗаполнения.Вставить("Сотрудник", ЗначенияИзмерений["Сотрудник"]);
	
	СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.Запись.ФормаОбъекта",СтруктураПараметров,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменение_Запись" Тогда	
		ЗаполнитьЖурналЗаписей();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;  
	
	ЭлементПланировщика = ВыделенныеЭлементы[0];
	СтруктураПараметров = Новый Структура("Ключ", ЭлементПланировщика.Значение);
	ОткрытьФорму("Документ.Запись.ФормаОбъекта", СтруктураПараметров,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;
	
	ЭлементПланировщика = ВыделенныеЭлементы[0];
	ЗначенияРеквзитов = Новый Структура;
	ЗначенияРеквзитов.Вставить("Дата", ЭлементПланировщика.Начало);
	ЗначенияРеквзитов.Вставить("ДатаОкончания", ЭлементПланировщика.Конец);
	ЗначенияРеквзитов.Вставить("Сотрудник", ЭлементПланировщика.ЗначенияИзмерений["Сотрудник"]);
	ОбновитьДанныеЗаписи(ЭлементПланировщика.Значение,ЗначенияРеквзитов);
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ОбновитьДанныеЗаписи(Запись, ЗначенияРеквзитов)

	ОбъектЗаписи = Запись.ПолучитьОбъект();
	
	ЕстьИзменения = Ложь;
	Для каждого Реквизит Из ЗначенияРеквзитов Цикл
		Если ОбъектЗаписи[Реквизит.Ключ] <> Реквизит.Значение Тогда		
			ЕстьИзменения = Истина;
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	Если ЕстьИзменения Тогда	
		ЗаполнитьЗначенияСвойств(ОбъектЗаписи,ЗначенияРеквзитов);
		ОбъектЗаписи.Длительность = (ОбъектЗаписи.ДатаОкончания - ОбъектЗаписи.Дата) / 60;
		ОбъектЗаписи.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;

КонецПроцедуры
